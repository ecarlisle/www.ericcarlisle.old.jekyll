@mixin font-face($family, $filename, $weight, $style) {
  @font-face {
    font-family: '#{$family}';
    src: url('#{$filename}.eot');                                     /* IE9 Compatibility Modes */
    src: url('#{$filename}.eot?#iefix') format('embedded-opentype'),  /* IE6-IE8 */  
         url('#{$filename}.woff2') format('woff2'),                   /* Super Modern Browsers */
         url('#{$filename}.woff') format('woff'),                     /* Pretty Modern Browsers */
         url('#{$filename}.ttf') format('truetype'),                  /* Safari, Android, iOS */
         url('#{$filename}.svg##{$family}') format('svg');            /* Legacy iOS */
    font-weight: $weight;
    font-style: $style;
  }
}

//@font-face {
//  font-family: 'MyWebFont';
//  src: url('webfont.eot'); /* IE9 Compat Modes */
//  src: url('webfont.eot?#iefix') format('embedded-opentype'), /* IE6-IE8 */
//       url('webfont.woff2') format('woff2'), /* Super Modern Browsers */
//       url('webfont.woff') format('woff'), /* Pretty Modern Browsers */
//       url('webfont.ttf')  format('truetype'), /* Safari, Android, iOS */
//       url('webfont.svg#svgFontName') format('svg'); /* Legacy iOS */
//}



@mixin bp($width) {
  @if $width == xs {
    @media all and (min-width: $xs) { 
      @content; 
    }
  }
  @else if $width == sm {
    @media all and (min-width: $sm) { 
      @content; 
    }
  }
  @else if $width == md {
    @media all and (min-width: $md) { 
      @content; 
    }
  }
  @else if $width == lg {
    @media all and (min-width: $lg)  { 
      @content; 
    }
  }
  @else if $width == xl {
    @media all and (min-width: $xl)  { 
      @content; 
    }
  }
}

@mixin font-size($sizeValue: 1.6) {
  font-size: ($sizeValue * 10) + px;
  font-size: $sizeValue + rem;
}

